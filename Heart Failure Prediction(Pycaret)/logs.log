2025-05-05 17:23:56,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-05 17:23:56,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-05 17:23:56,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-05 17:23:56,871:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-05-05 17:30:33,227:INFO:PyCaret ClassificationExperiment
2025-05-05 17:30:33,228:INFO:Logging name: clf-default-name
2025-05-05 17:30:33,228:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-05-05 17:30:33,228:INFO:version 3.3.2
2025-05-05 17:30:33,228:INFO:Initializing setup()
2025-05-05 17:30:33,228:INFO:self.USI: bd75
2025-05-05 17:30:33,228:INFO:self._variable_keys: {'logging_param', 'fix_imbalance', 'target_param', 'fold_groups_param', 'y_test', 'n_jobs_param', 'X_train', 'gpu_n_jobs_param', 'data', 'y_train', 'y', 'fold_generator', 'gpu_param', 'is_multiclass', 'memory', '_available_plots', 'fold_shuffle_param', 'pipeline', 'exp_id', 'seed', 'html_param', 'log_plots_param', 'exp_name_log', 'X_test', '_ml_usecase', 'X', 'idx', 'USI'}
2025-05-05 17:30:33,228:INFO:Checking environment
2025-05-05 17:30:33,228:INFO:python_version: 3.11.0
2025-05-05 17:30:33,228:INFO:python_build: ('main', 'Oct 24 2022 18:26:48')
2025-05-05 17:30:33,229:INFO:machine: AMD64
2025-05-05 17:30:33,229:INFO:platform: Windows-10-10.0.22631-SP0
2025-05-05 17:30:33,235:INFO:Memory: svmem(total=16390561792, available=2440347648, percent=85.1, used=13950214144, free=2440347648)
2025-05-05 17:30:33,235:INFO:Physical Core: 8
2025-05-05 17:30:33,235:INFO:Logical Core: 16
2025-05-05 17:30:33,235:INFO:Checking libraries
2025-05-05 17:30:33,235:INFO:System:
2025-05-05 17:30:33,235:INFO:    python: 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)]
2025-05-05 17:30:33,235:INFO:executable: c:\Users\User\AppData\Local\Programs\Python\Python311\python.exe
2025-05-05 17:30:33,235:INFO:   machine: Windows-10-10.0.22631-SP0
2025-05-05 17:30:33,235:INFO:PyCaret required dependencies:
2025-05-05 17:30:33,362:INFO:                 pip: 22.3
2025-05-05 17:30:33,362:INFO:          setuptools: 65.5.0
2025-05-05 17:30:33,362:INFO:             pycaret: 3.3.2
2025-05-05 17:30:33,362:INFO:             IPython: 9.2.0
2025-05-05 17:30:33,362:INFO:          ipywidgets: 8.1.6
2025-05-05 17:30:33,362:INFO:                tqdm: 4.67.1
2025-05-05 17:30:33,362:INFO:               numpy: 1.26.4
2025-05-05 17:30:33,362:INFO:              pandas: 2.1.4
2025-05-05 17:30:33,362:INFO:              jinja2: 3.1.6
2025-05-05 17:30:33,362:INFO:               scipy: 1.11.4
2025-05-05 17:30:33,362:INFO:              joblib: 1.3.2
2025-05-05 17:30:33,362:INFO:             sklearn: 1.4.2
2025-05-05 17:30:33,362:INFO:                pyod: 2.0.5
2025-05-05 17:30:33,362:INFO:            imblearn: 0.13.0
2025-05-05 17:30:33,362:INFO:   category_encoders: 2.7.0
2025-05-05 17:30:33,362:INFO:            lightgbm: 4.6.0
2025-05-05 17:30:33,362:INFO:               numba: 0.61.2
2025-05-05 17:30:33,362:INFO:            requests: 2.32.3
2025-05-05 17:30:33,362:INFO:          matplotlib: 3.7.5
2025-05-05 17:30:33,362:INFO:          scikitplot: 0.3.7
2025-05-05 17:30:33,362:INFO:         yellowbrick: 1.5
2025-05-05 17:30:33,362:INFO:              plotly: 5.24.1
2025-05-05 17:30:33,362:INFO:    plotly-resampler: Not installed
2025-05-05 17:30:33,362:INFO:             kaleido: 0.2.1
2025-05-05 17:30:33,362:INFO:           schemdraw: 0.15
2025-05-05 17:30:33,362:INFO:         statsmodels: 0.14.4
2025-05-05 17:30:33,362:INFO:              sktime: 0.26.0
2025-05-05 17:30:33,362:INFO:               tbats: 1.1.3
2025-05-05 17:30:33,362:INFO:            pmdarima: 2.0.4
2025-05-05 17:30:33,363:INFO:              psutil: 7.0.0
2025-05-05 17:30:33,363:INFO:          markupsafe: 3.0.2
2025-05-05 17:30:33,363:INFO:             pickle5: Not installed
2025-05-05 17:30:33,363:INFO:         cloudpickle: 3.1.1
2025-05-05 17:30:33,363:INFO:         deprecation: 2.1.0
2025-05-05 17:30:33,363:INFO:              xxhash: 3.5.0
2025-05-05 17:30:33,363:INFO:           wurlitzer: Not installed
2025-05-05 17:30:33,363:INFO:PyCaret optional dependencies:
2025-05-05 17:30:33,373:INFO:                shap: Not installed
2025-05-05 17:30:33,373:INFO:           interpret: Not installed
2025-05-05 17:30:33,373:INFO:                umap: Not installed
2025-05-05 17:30:33,373:INFO:     ydata_profiling: Not installed
2025-05-05 17:30:33,373:INFO:  explainerdashboard: Not installed
2025-05-05 17:30:33,373:INFO:             autoviz: Not installed
2025-05-05 17:30:33,373:INFO:           fairlearn: Not installed
2025-05-05 17:30:33,373:INFO:          deepchecks: Not installed
2025-05-05 17:30:33,373:INFO:             xgboost: Not installed
2025-05-05 17:30:33,373:INFO:            catboost: Not installed
2025-05-05 17:30:33,373:INFO:              kmodes: Not installed
2025-05-05 17:30:33,373:INFO:             mlxtend: Not installed
2025-05-05 17:30:33,373:INFO:       statsforecast: Not installed
2025-05-05 17:30:33,373:INFO:        tune_sklearn: Not installed
2025-05-05 17:30:33,373:INFO:                 ray: Not installed
2025-05-05 17:30:33,373:INFO:            hyperopt: Not installed
2025-05-05 17:30:33,373:INFO:              optuna: Not installed
2025-05-05 17:30:33,373:INFO:               skopt: Not installed
2025-05-05 17:30:33,373:INFO:              mlflow: Not installed
2025-05-05 17:30:33,373:INFO:              gradio: Not installed
2025-05-05 17:30:33,373:INFO:             fastapi: Not installed
2025-05-05 17:30:33,373:INFO:             uvicorn: Not installed
2025-05-05 17:30:33,373:INFO:              m2cgen: Not installed
2025-05-05 17:30:33,373:INFO:           evidently: Not installed
2025-05-05 17:30:33,373:INFO:               fugue: Not installed
2025-05-05 17:30:33,373:INFO:           streamlit: Not installed
2025-05-05 17:30:33,373:INFO:             prophet: Not installed
2025-05-05 17:30:33,373:INFO:None
2025-05-05 17:30:33,373:INFO:Set up data.
2025-05-05 17:30:33,381:INFO:Set up folding strategy.
2025-05-05 17:30:33,381:INFO:Set up train/test split.
2025-05-05 17:30:33,386:INFO:Set up index.
2025-05-05 17:30:33,386:INFO:Assigning column types.
2025-05-05 17:30:33,390:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-05-05 17:30:33,438:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-05-05 17:30:33,443:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-05 17:30:33,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,532:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-05-05 17:30:33,533:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-05 17:30:33,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,565:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-05-05 17:30:33,608:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-05 17:30:33,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,680:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-05-05 17:30:33,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,707:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-05-05 17:30:33,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,887:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,887:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:33,891:INFO:Preparing preprocessing pipeline...
2025-05-05 17:30:33,892:INFO:Set up simple imputation.
2025-05-05 17:30:33,915:INFO:Finished creating preprocessing pipeline.
2025-05-05 17:30:33,920:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-05-05 17:30:33,920:INFO:Creating final display dataframe.
2025-05-05 17:30:34,031:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target       DEATH_EVENT
2                   Target type            Binary
3           Original data shape         (299, 13)
4        Transformed data shape         (299, 13)
5   Transformed train set shape         (209, 13)
6    Transformed test set shape          (90, 13)
7              Numeric features                12
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              bd75
2025-05-05 17:30:34,118:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:34,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:34,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:34,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-05-05 17:30:34,194:INFO:setup() successfully completed in 1.01s...............
2025-05-05 17:31:39,627:INFO:Initializing compare_models()
2025-05-05 17:31:39,627:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-05-05 17:31:39,628:INFO:Checking exceptions
2025-05-05 17:31:39,632:INFO:Preparing display monitor
2025-05-05 17:31:39,667:INFO:Initializing Logistic Regression
2025-05-05 17:31:39,667:INFO:Total runtime is 0.0 minutes
2025-05-05 17:31:39,673:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:39,673:INFO:Initializing create_model()
2025-05-05 17:31:39,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:39,673:INFO:Checking exceptions
2025-05-05 17:31:39,673:INFO:Importing libraries
2025-05-05 17:31:39,674:INFO:Copying training dataset
2025-05-05 17:31:39,682:INFO:Defining folds
2025-05-05 17:31:39,682:INFO:Declaring metric variables
2025-05-05 17:31:39,687:INFO:Importing untrained model
2025-05-05 17:31:39,692:INFO:Logistic Regression Imported successfully
2025-05-05 17:31:39,701:INFO:Starting cross validation
2025-05-05 17:31:39,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:43,999:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,002:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,004:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,005:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,005:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,010:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,013:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,016:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,069:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-05-05 17:31:44,111:INFO:Calculating mean and std
2025-05-05 17:31:44,113:INFO:Creating metrics dataframe
2025-05-05 17:31:44,116:INFO:Uploading results into container
2025-05-05 17:31:44,117:INFO:Uploading model into container now
2025-05-05 17:31:44,118:INFO:_master_model_container: 1
2025-05-05 17:31:44,118:INFO:_display_container: 2
2025-05-05 17:31:44,118:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-05-05 17:31:44,119:INFO:create_model() successfully completed......................................
2025-05-05 17:31:44,234:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:44,234:INFO:Creating metrics dataframe
2025-05-05 17:31:44,240:INFO:Initializing K Neighbors Classifier
2025-05-05 17:31:44,240:INFO:Total runtime is 0.07622140248616537 minutes
2025-05-05 17:31:44,243:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:44,243:INFO:Initializing create_model()
2025-05-05 17:31:44,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:44,244:INFO:Checking exceptions
2025-05-05 17:31:44,244:INFO:Importing libraries
2025-05-05 17:31:44,244:INFO:Copying training dataset
2025-05-05 17:31:44,248:INFO:Defining folds
2025-05-05 17:31:44,248:INFO:Declaring metric variables
2025-05-05 17:31:44,252:INFO:Importing untrained model
2025-05-05 17:31:44,256:INFO:K Neighbors Classifier Imported successfully
2025-05-05 17:31:44,264:INFO:Starting cross validation
2025-05-05 17:31:44,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:46,867:INFO:Calculating mean and std
2025-05-05 17:31:46,870:INFO:Creating metrics dataframe
2025-05-05 17:31:46,873:INFO:Uploading results into container
2025-05-05 17:31:46,874:INFO:Uploading model into container now
2025-05-05 17:31:46,876:INFO:_master_model_container: 2
2025-05-05 17:31:46,876:INFO:_display_container: 2
2025-05-05 17:31:46,877:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-05-05 17:31:46,878:INFO:create_model() successfully completed......................................
2025-05-05 17:31:46,986:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:46,986:INFO:Creating metrics dataframe
2025-05-05 17:31:47,003:INFO:Initializing Naive Bayes
2025-05-05 17:31:47,003:INFO:Total runtime is 0.12227309147516886 minutes
2025-05-05 17:31:47,006:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:47,007:INFO:Initializing create_model()
2025-05-05 17:31:47,007:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:47,007:INFO:Checking exceptions
2025-05-05 17:31:47,007:INFO:Importing libraries
2025-05-05 17:31:47,007:INFO:Copying training dataset
2025-05-05 17:31:47,012:INFO:Defining folds
2025-05-05 17:31:47,012:INFO:Declaring metric variables
2025-05-05 17:31:47,015:INFO:Importing untrained model
2025-05-05 17:31:47,019:INFO:Naive Bayes Imported successfully
2025-05-05 17:31:47,024:INFO:Starting cross validation
2025-05-05 17:31:47,025:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:47,074:INFO:Calculating mean and std
2025-05-05 17:31:47,075:INFO:Creating metrics dataframe
2025-05-05 17:31:47,077:INFO:Uploading results into container
2025-05-05 17:31:47,077:INFO:Uploading model into container now
2025-05-05 17:31:47,077:INFO:_master_model_container: 3
2025-05-05 17:31:47,078:INFO:_display_container: 2
2025-05-05 17:31:47,078:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-05-05 17:31:47,078:INFO:create_model() successfully completed......................................
2025-05-05 17:31:47,174:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:47,174:INFO:Creating metrics dataframe
2025-05-05 17:31:47,179:INFO:Initializing Decision Tree Classifier
2025-05-05 17:31:47,181:INFO:Total runtime is 0.1252311110496521 minutes
2025-05-05 17:31:47,184:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:47,184:INFO:Initializing create_model()
2025-05-05 17:31:47,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:47,184:INFO:Checking exceptions
2025-05-05 17:31:47,184:INFO:Importing libraries
2025-05-05 17:31:47,184:INFO:Copying training dataset
2025-05-05 17:31:47,190:INFO:Defining folds
2025-05-05 17:31:47,190:INFO:Declaring metric variables
2025-05-05 17:31:47,194:INFO:Importing untrained model
2025-05-05 17:31:47,196:INFO:Decision Tree Classifier Imported successfully
2025-05-05 17:31:47,203:INFO:Starting cross validation
2025-05-05 17:31:47,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:47,265:INFO:Calculating mean and std
2025-05-05 17:31:47,265:INFO:Creating metrics dataframe
2025-05-05 17:31:47,267:INFO:Uploading results into container
2025-05-05 17:31:47,267:INFO:Uploading model into container now
2025-05-05 17:31:47,267:INFO:_master_model_container: 4
2025-05-05 17:31:47,267:INFO:_display_container: 2
2025-05-05 17:31:47,268:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2025-05-05 17:31:47,268:INFO:create_model() successfully completed......................................
2025-05-05 17:31:47,362:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:47,362:INFO:Creating metrics dataframe
2025-05-05 17:31:47,368:INFO:Initializing SVM - Linear Kernel
2025-05-05 17:31:47,368:INFO:Total runtime is 0.12835630973180134 minutes
2025-05-05 17:31:47,372:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:47,372:INFO:Initializing create_model()
2025-05-05 17:31:47,373:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:47,373:INFO:Checking exceptions
2025-05-05 17:31:47,373:INFO:Importing libraries
2025-05-05 17:31:47,373:INFO:Copying training dataset
2025-05-05 17:31:47,377:INFO:Defining folds
2025-05-05 17:31:47,377:INFO:Declaring metric variables
2025-05-05 17:31:47,381:INFO:Importing untrained model
2025-05-05 17:31:47,384:INFO:SVM - Linear Kernel Imported successfully
2025-05-05 17:31:47,393:INFO:Starting cross validation
2025-05-05 17:31:47,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:47,434:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,434:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,434:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,435:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,436:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,436:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,436:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,439:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:47,445:INFO:Calculating mean and std
2025-05-05 17:31:47,446:INFO:Creating metrics dataframe
2025-05-05 17:31:47,447:INFO:Uploading results into container
2025-05-05 17:31:47,448:INFO:Uploading model into container now
2025-05-05 17:31:47,448:INFO:_master_model_container: 5
2025-05-05 17:31:47,448:INFO:_display_container: 2
2025-05-05 17:31:47,449:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-05-05 17:31:47,449:INFO:create_model() successfully completed......................................
2025-05-05 17:31:47,542:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:47,542:INFO:Creating metrics dataframe
2025-05-05 17:31:47,550:INFO:Initializing Ridge Classifier
2025-05-05 17:31:47,551:INFO:Total runtime is 0.1313990831375122 minutes
2025-05-05 17:31:47,554:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:47,554:INFO:Initializing create_model()
2025-05-05 17:31:47,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:47,555:INFO:Checking exceptions
2025-05-05 17:31:47,555:INFO:Importing libraries
2025-05-05 17:31:47,555:INFO:Copying training dataset
2025-05-05 17:31:47,558:INFO:Defining folds
2025-05-05 17:31:47,558:INFO:Declaring metric variables
2025-05-05 17:31:47,561:INFO:Importing untrained model
2025-05-05 17:31:47,567:INFO:Ridge Classifier Imported successfully
2025-05-05 17:31:47,574:INFO:Starting cross validation
2025-05-05 17:31:47,575:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:47,655:INFO:Calculating mean and std
2025-05-05 17:31:47,655:INFO:Creating metrics dataframe
2025-05-05 17:31:47,657:INFO:Uploading results into container
2025-05-05 17:31:47,657:INFO:Uploading model into container now
2025-05-05 17:31:47,657:INFO:_master_model_container: 6
2025-05-05 17:31:47,657:INFO:_display_container: 2
2025-05-05 17:31:47,657:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2025-05-05 17:31:47,657:INFO:create_model() successfully completed......................................
2025-05-05 17:31:47,753:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:47,754:INFO:Creating metrics dataframe
2025-05-05 17:31:47,759:INFO:Initializing Random Forest Classifier
2025-05-05 17:31:47,760:INFO:Total runtime is 0.13488962252934772 minutes
2025-05-05 17:31:47,763:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:47,764:INFO:Initializing create_model()
2025-05-05 17:31:47,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:47,764:INFO:Checking exceptions
2025-05-05 17:31:47,764:INFO:Importing libraries
2025-05-05 17:31:47,764:INFO:Copying training dataset
2025-05-05 17:31:47,767:INFO:Defining folds
2025-05-05 17:31:47,768:INFO:Declaring metric variables
2025-05-05 17:31:47,770:INFO:Importing untrained model
2025-05-05 17:31:47,774:INFO:Random Forest Classifier Imported successfully
2025-05-05 17:31:47,781:INFO:Starting cross validation
2025-05-05 17:31:47,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:48,038:INFO:Calculating mean and std
2025-05-05 17:31:48,040:INFO:Creating metrics dataframe
2025-05-05 17:31:48,043:INFO:Uploading results into container
2025-05-05 17:31:48,044:INFO:Uploading model into container now
2025-05-05 17:31:48,044:INFO:_master_model_container: 7
2025-05-05 17:31:48,044:INFO:_display_container: 2
2025-05-05 17:31:48,045:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-05-05 17:31:48,046:INFO:create_model() successfully completed......................................
2025-05-05 17:31:48,150:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:48,150:INFO:Creating metrics dataframe
2025-05-05 17:31:48,158:INFO:Initializing Quadratic Discriminant Analysis
2025-05-05 17:31:48,158:INFO:Total runtime is 0.14152255058288574 minutes
2025-05-05 17:31:48,161:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:48,162:INFO:Initializing create_model()
2025-05-05 17:31:48,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:48,162:INFO:Checking exceptions
2025-05-05 17:31:48,162:INFO:Importing libraries
2025-05-05 17:31:48,162:INFO:Copying training dataset
2025-05-05 17:31:48,165:INFO:Defining folds
2025-05-05 17:31:48,165:INFO:Declaring metric variables
2025-05-05 17:31:48,168:INFO:Importing untrained model
2025-05-05 17:31:48,173:INFO:Quadratic Discriminant Analysis Imported successfully
2025-05-05 17:31:48,179:INFO:Starting cross validation
2025-05-05 17:31:48,181:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:48,271:INFO:Calculating mean and std
2025-05-05 17:31:48,272:INFO:Creating metrics dataframe
2025-05-05 17:31:48,273:INFO:Uploading results into container
2025-05-05 17:31:48,273:INFO:Uploading model into container now
2025-05-05 17:31:48,275:INFO:_master_model_container: 8
2025-05-05 17:31:48,275:INFO:_display_container: 2
2025-05-05 17:31:48,275:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-05-05 17:31:48,275:INFO:create_model() successfully completed......................................
2025-05-05 17:31:48,374:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:48,375:INFO:Creating metrics dataframe
2025-05-05 17:31:48,383:INFO:Initializing Ada Boost Classifier
2025-05-05 17:31:48,383:INFO:Total runtime is 0.14526734749476114 minutes
2025-05-05 17:31:48,387:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:48,388:INFO:Initializing create_model()
2025-05-05 17:31:48,388:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:48,388:INFO:Checking exceptions
2025-05-05 17:31:48,388:INFO:Importing libraries
2025-05-05 17:31:48,388:INFO:Copying training dataset
2025-05-05 17:31:48,393:INFO:Defining folds
2025-05-05 17:31:48,393:INFO:Declaring metric variables
2025-05-05 17:31:48,396:INFO:Importing untrained model
2025-05-05 17:31:48,399:INFO:Ada Boost Classifier Imported successfully
2025-05-05 17:31:48,409:INFO:Starting cross validation
2025-05-05 17:31:48,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:48,464:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,464:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,464:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,464:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,465:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,465:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,465:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,465:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-05-05 17:31:48,591:INFO:Calculating mean and std
2025-05-05 17:31:48,592:INFO:Creating metrics dataframe
2025-05-05 17:31:48,595:INFO:Uploading results into container
2025-05-05 17:31:48,595:INFO:Uploading model into container now
2025-05-05 17:31:48,596:INFO:_master_model_container: 9
2025-05-05 17:31:48,596:INFO:_display_container: 2
2025-05-05 17:31:48,596:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2025-05-05 17:31:48,596:INFO:create_model() successfully completed......................................
2025-05-05 17:31:48,700:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:48,700:INFO:Creating metrics dataframe
2025-05-05 17:31:48,709:INFO:Initializing Gradient Boosting Classifier
2025-05-05 17:31:48,709:INFO:Total runtime is 0.15069887240727742 minutes
2025-05-05 17:31:48,712:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:48,712:INFO:Initializing create_model()
2025-05-05 17:31:48,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:48,713:INFO:Checking exceptions
2025-05-05 17:31:48,713:INFO:Importing libraries
2025-05-05 17:31:48,713:INFO:Copying training dataset
2025-05-05 17:31:48,718:INFO:Defining folds
2025-05-05 17:31:48,718:INFO:Declaring metric variables
2025-05-05 17:31:48,722:INFO:Importing untrained model
2025-05-05 17:31:48,726:INFO:Gradient Boosting Classifier Imported successfully
2025-05-05 17:31:48,733:INFO:Starting cross validation
2025-05-05 17:31:48,735:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:48,920:INFO:Calculating mean and std
2025-05-05 17:31:48,921:INFO:Creating metrics dataframe
2025-05-05 17:31:48,923:INFO:Uploading results into container
2025-05-05 17:31:48,923:INFO:Uploading model into container now
2025-05-05 17:31:48,924:INFO:_master_model_container: 10
2025-05-05 17:31:48,924:INFO:_display_container: 2
2025-05-05 17:31:48,925:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-05-05 17:31:48,925:INFO:create_model() successfully completed......................................
2025-05-05 17:31:49,032:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:49,033:INFO:Creating metrics dataframe
2025-05-05 17:31:49,039:INFO:Initializing Linear Discriminant Analysis
2025-05-05 17:31:49,039:INFO:Total runtime is 0.15621119737625122 minutes
2025-05-05 17:31:49,043:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:49,044:INFO:Initializing create_model()
2025-05-05 17:31:49,044:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:49,044:INFO:Checking exceptions
2025-05-05 17:31:49,044:INFO:Importing libraries
2025-05-05 17:31:49,044:INFO:Copying training dataset
2025-05-05 17:31:49,048:INFO:Defining folds
2025-05-05 17:31:49,049:INFO:Declaring metric variables
2025-05-05 17:31:49,052:INFO:Importing untrained model
2025-05-05 17:31:49,056:INFO:Linear Discriminant Analysis Imported successfully
2025-05-05 17:31:49,062:INFO:Starting cross validation
2025-05-05 17:31:49,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:49,167:INFO:Calculating mean and std
2025-05-05 17:31:49,168:INFO:Creating metrics dataframe
2025-05-05 17:31:49,170:INFO:Uploading results into container
2025-05-05 17:31:49,170:INFO:Uploading model into container now
2025-05-05 17:31:49,171:INFO:_master_model_container: 11
2025-05-05 17:31:49,171:INFO:_display_container: 2
2025-05-05 17:31:49,171:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-05-05 17:31:49,171:INFO:create_model() successfully completed......................................
2025-05-05 17:31:49,271:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:49,271:INFO:Creating metrics dataframe
2025-05-05 17:31:49,279:INFO:Initializing Extra Trees Classifier
2025-05-05 17:31:49,280:INFO:Total runtime is 0.1602200706799825 minutes
2025-05-05 17:31:49,283:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:49,284:INFO:Initializing create_model()
2025-05-05 17:31:49,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:49,284:INFO:Checking exceptions
2025-05-05 17:31:49,284:INFO:Importing libraries
2025-05-05 17:31:49,284:INFO:Copying training dataset
2025-05-05 17:31:49,288:INFO:Defining folds
2025-05-05 17:31:49,288:INFO:Declaring metric variables
2025-05-05 17:31:49,292:INFO:Importing untrained model
2025-05-05 17:31:49,294:INFO:Extra Trees Classifier Imported successfully
2025-05-05 17:31:49,302:INFO:Starting cross validation
2025-05-05 17:31:49,303:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:49,518:INFO:Calculating mean and std
2025-05-05 17:31:49,519:INFO:Creating metrics dataframe
2025-05-05 17:31:49,522:INFO:Uploading results into container
2025-05-05 17:31:49,522:INFO:Uploading model into container now
2025-05-05 17:31:49,523:INFO:_master_model_container: 12
2025-05-05 17:31:49,523:INFO:_display_container: 2
2025-05-05 17:31:49,524:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2025-05-05 17:31:49,524:INFO:create_model() successfully completed......................................
2025-05-05 17:31:49,621:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:49,621:INFO:Creating metrics dataframe
2025-05-05 17:31:49,629:INFO:Initializing Light Gradient Boosting Machine
2025-05-05 17:31:49,630:INFO:Total runtime is 0.1660481890042623 minutes
2025-05-05 17:31:49,633:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:49,634:INFO:Initializing create_model()
2025-05-05 17:31:49,634:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:49,634:INFO:Checking exceptions
2025-05-05 17:31:49,634:INFO:Importing libraries
2025-05-05 17:31:49,634:INFO:Copying training dataset
2025-05-05 17:31:49,637:INFO:Defining folds
2025-05-05 17:31:49,637:INFO:Declaring metric variables
2025-05-05 17:31:49,643:INFO:Importing untrained model
2025-05-05 17:31:49,648:INFO:Light Gradient Boosting Machine Imported successfully
2025-05-05 17:31:49,655:INFO:Starting cross validation
2025-05-05 17:31:49,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:50,024:INFO:Calculating mean and std
2025-05-05 17:31:50,025:INFO:Creating metrics dataframe
2025-05-05 17:31:50,029:INFO:Uploading results into container
2025-05-05 17:31:50,029:INFO:Uploading model into container now
2025-05-05 17:31:50,030:INFO:_master_model_container: 13
2025-05-05 17:31:50,030:INFO:_display_container: 2
2025-05-05 17:31:50,030:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-05-05 17:31:50,031:INFO:create_model() successfully completed......................................
2025-05-05 17:31:50,141:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:50,147:INFO:Creating metrics dataframe
2025-05-05 17:31:50,154:INFO:Initializing Dummy Classifier
2025-05-05 17:31:50,156:INFO:Total runtime is 0.17481827338536582 minutes
2025-05-05 17:31:50,160:INFO:SubProcess create_model() called ==================================
2025-05-05 17:31:50,160:INFO:Initializing create_model()
2025-05-05 17:31:50,161:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F162515250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:50,161:INFO:Checking exceptions
2025-05-05 17:31:50,161:INFO:Importing libraries
2025-05-05 17:31:50,161:INFO:Copying training dataset
2025-05-05 17:31:50,164:INFO:Defining folds
2025-05-05 17:31:50,164:INFO:Declaring metric variables
2025-05-05 17:31:50,167:INFO:Importing untrained model
2025-05-05 17:31:50,171:INFO:Dummy Classifier Imported successfully
2025-05-05 17:31:50,177:INFO:Starting cross validation
2025-05-05 17:31:50,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-05-05 17:31:50,207:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,210:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,212:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,212:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,213:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,216:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,216:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,216:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,220:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,221:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-05-05 17:31:50,229:INFO:Calculating mean and std
2025-05-05 17:31:50,230:INFO:Creating metrics dataframe
2025-05-05 17:31:50,232:INFO:Uploading results into container
2025-05-05 17:31:50,232:INFO:Uploading model into container now
2025-05-05 17:31:50,232:INFO:_master_model_container: 14
2025-05-05 17:31:50,232:INFO:_display_container: 2
2025-05-05 17:31:50,233:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2025-05-05 17:31:50,233:INFO:create_model() successfully completed......................................
2025-05-05 17:31:50,329:INFO:SubProcess create_model() end ==================================
2025-05-05 17:31:50,329:INFO:Creating metrics dataframe
2025-05-05 17:31:50,349:INFO:Initializing create_model()
2025-05-05 17:31:50,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-05-05 17:31:50,350:INFO:Checking exceptions
2025-05-05 17:31:50,351:INFO:Importing libraries
2025-05-05 17:31:50,351:INFO:Copying training dataset
2025-05-05 17:31:50,353:INFO:Defining folds
2025-05-05 17:31:50,353:INFO:Declaring metric variables
2025-05-05 17:31:50,353:INFO:Importing untrained model
2025-05-05 17:31:50,353:INFO:Declaring custom model
2025-05-05 17:31:50,353:INFO:Random Forest Classifier Imported successfully
2025-05-05 17:31:50,354:INFO:Cross validation set to False
2025-05-05 17:31:50,354:INFO:Fitting Model
2025-05-05 17:31:50,504:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-05-05 17:31:50,505:INFO:create_model() successfully completed......................................
2025-05-05 17:31:50,628:INFO:_master_model_container: 14
2025-05-05 17:31:50,628:INFO:_display_container: 2
2025-05-05 17:31:50,628:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-05-05 17:31:50,628:INFO:compare_models() successfully completed......................................
2025-05-05 17:32:41,165:INFO:Initializing evaluate_model()
2025-05-05 17:32:41,166:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-05-05 17:32:41,176:INFO:Initializing plot_model()
2025-05-05 17:32:41,176:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-05 17:32:41,176:INFO:Checking exceptions
2025-05-05 17:32:41,199:INFO:Preloading libraries
2025-05-05 17:32:41,215:INFO:Copying training dataset
2025-05-05 17:32:41,216:INFO:Plot type: pipeline
2025-05-05 17:32:41,519:INFO:Visual Rendered Successfully
2025-05-05 17:32:41,625:INFO:plot_model() successfully completed......................................
2025-05-05 17:34:38,395:INFO:Initializing save_model()
2025-05-05 17:34:38,395:INFO:save_model(model=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), model_name=Best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-05-05 17:34:38,395:INFO:Adding model into prep_pipe
2025-05-05 17:34:38,438:INFO:Best_model.pkl saved in current working directory
2025-05-05 17:34:38,444:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'anaemia',
                                             'creatinine_phosphokinase',
                                             'diabetes', 'ejection_fraction',
                                             'high_blood_pressure', 'platelets',
                                             'serum_creatinine', 'serum_sodium',
                                             'sex', 'smoking', 'time'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_...
                 RandomForestClassifier(bootstrap=True, ccp_alpha=0.0,
                                        class_weight=None, criterion='gini',
                                        max_depth=None, max_features='sqrt',
                                        max_leaf_nodes=None, max_samples=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, n_estimators=100,
                                        n_jobs=-1, oob_score=False,
                                        random_state=123, verbose=0,
                                        warm_start=False))],
         verbose=False)
2025-05-05 17:34:38,444:INFO:save_model() successfully completed......................................
2025-05-05 17:35:27,004:INFO:Initializing plot_model()
2025-05-05 17:35:27,008:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-05 17:35:27,008:INFO:Checking exceptions
2025-05-05 17:35:27,038:INFO:Preloading libraries
2025-05-05 17:35:27,040:INFO:Copying training dataset
2025-05-05 17:35:27,040:INFO:Plot type: parameter
2025-05-05 17:35:27,040:INFO:Visual Rendered Successfully
2025-05-05 17:35:27,259:INFO:plot_model() successfully completed......................................
2025-05-05 17:35:31,306:INFO:Initializing plot_model()
2025-05-05 17:35:31,306:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-05 17:35:31,306:INFO:Checking exceptions
2025-05-05 17:35:31,339:INFO:Preloading libraries
2025-05-05 17:35:31,346:INFO:Copying training dataset
2025-05-05 17:35:31,346:INFO:Plot type: auc
2025-05-05 17:35:31,393:INFO:Fitting Model
2025-05-05 17:35:31,436:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
2025-05-05 17:35:31,436:WARNING:  warnings.warn(
2025-05-05 17:35:31,438:INFO:Scoring test/hold-out set
2025-05-05 17:35:31,691:INFO:Visual Rendered Successfully
2025-05-05 17:35:31,963:INFO:plot_model() successfully completed......................................
2025-05-05 17:35:33,035:INFO:Initializing plot_model()
2025-05-05 17:35:33,035:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-05 17:35:33,035:INFO:Checking exceptions
2025-05-05 17:35:33,062:INFO:Preloading libraries
2025-05-05 17:35:33,062:INFO:Copying training dataset
2025-05-05 17:35:33,062:INFO:Plot type: confusion_matrix
2025-05-05 17:35:33,107:INFO:Fitting Model
2025-05-05 17:35:33,107:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
2025-05-05 17:35:33,107:WARNING:  warnings.warn(
2025-05-05 17:35:33,107:INFO:Scoring test/hold-out set
2025-05-05 17:35:33,287:INFO:Visual Rendered Successfully
2025-05-05 17:35:33,491:INFO:plot_model() successfully completed......................................
2025-05-05 17:35:37,054:INFO:Initializing plot_model()
2025-05-05 17:35:37,054:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=threshold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-05 17:35:37,054:INFO:Checking exceptions
2025-05-05 17:35:37,080:INFO:Preloading libraries
2025-05-05 17:35:37,084:INFO:Copying training dataset
2025-05-05 17:35:37,084:INFO:Plot type: threshold
2025-05-05 17:35:37,138:INFO:Fitting Model
2025-05-05 17:35:44,613:WARNING:c:\Users\User\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
2025-05-05 17:35:44,613:WARNING:  warnings.warn(
2025-05-05 17:35:44,629:INFO:Scoring test/hold-out set
2025-05-05 17:35:44,882:INFO:Visual Rendered Successfully
2025-05-05 17:35:45,161:INFO:plot_model() successfully completed......................................
2025-05-05 17:35:45,255:INFO:Initializing plot_model()
2025-05-05 17:35:45,255:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F16223A210>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), plot=learning, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-05-05 17:35:45,255:INFO:Checking exceptions
2025-05-05 17:35:45,281:INFO:Preloading libraries
2025-05-05 17:35:45,291:INFO:Copying training dataset
2025-05-05 17:35:45,291:INFO:Plot type: learning
2025-05-05 17:35:45,407:INFO:Fitting Model
2025-05-05 17:35:47,655:INFO:Visual Rendered Successfully
2025-05-05 17:35:47,766:INFO:plot_model() successfully completed......................................
